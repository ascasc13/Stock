<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        table {
            margin: 0 auto;
            width: 80%;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            text-align: center;
            padding: 10px;
        }
        .search-sort-container {
            text-align: center;
            margin-bottom: 20px;
        }
        .search-sort-container input, .search-sort-container select {
            margin: 0 10px;
            padding: 10px;
        }
        .popup {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            padding: 10px;
            background-color: #28a745;
            color: white;
            border-radius: 5px;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        .popup.error {
            background-color: #dc3545;
        }
        .popup.show {
            opacity: 1;
        }
    </style>
</head>
<body>
<%- include('partials/header') %>
<main>
    <h1><%= title %></h1>
    <div class="search-sort-container">
        <input type="text" id="search" placeholder="Rechercher par nom...">
        <select id="statut-filter">
            <option value="">Tous les statuts</option>
            <% statuses.forEach(status => { %>
                <option value="<%= status.nom %>"><%= status.nom %></option>
            <% }) %>
        </select>
        <select id="sort">
            <option value="nom">Nom</option>
            <option value="marque">Marque</option>
            <option value="modele">Modèle</option>
            <option value="code_barre">Code Barre</option>
        </select>
    </div>
    <table>
        <thead>
        <tr>
            <th>Nom</th>
            <th>Marque</th>
            <th>Modèle</th>
            <th>Status</th>
            <th>Code-barre</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody id="equipements-tbody">
        <% equipements.forEach(equipement => { %>
            <tr>
                <td><%= equipement.nom %></td>
                <td><%= marques.find(marque => marque.id === equipement.marque_id).nom %></td>
                <td><%= equipement.modele %></td>
                <td><%= statuses.find(status => status.id === equipement.status_id).nom %></td>
                <td><%= equipement.Code_barre %></td>
                <td>
                    <button onclick="afficherFormulaireModifier(<%= equipement.id %>)">Modifier</button>
                    <button onclick="supprimerEquipement(<%= equipement.id %>)">Supprimer</button>
                </td>
            </tr>
        <% }) %>
        </tbody>
    </table>
    <div id="formModifierEquipement" class="popup<%= modifierVisible ? ' show' : '' %>">
        <h2>Modifier l'équipement</h2>
        <form id="formModifier" method="POST">
            <div class="form-group">
                <label for="nom">Nom :</label>
                <input type="text" id="nom" name="nom" required>
            </div>
            <div class="form-group">
                <label for="marque">Marque :</label>
                <select id="marque" name="marque_id">
                    <% marques.forEach(marque => { %>
                        <option value="<%= marque.id %>"><%= marque.nom %></option>
                    <% }) %>
                </select>
            </div>
            <div class="form-group">
                <label for="status">Status :</label>
                <select id="status" name="status_id">
                    <% statuses.forEach(status => { %>
                        <option value="<%= status.id %>"><%= status.nom %></option>
                    <% }) %>
                </select>
            </div>
            <div class="form-group">
                <label for="code_barre">Code-barre :</label>
                <input type="text" id="code_barre" name="code_barre" required>
            </div>
            <div class="form-group">
                <button type="submit">Enregistrer</button>
            </div>
        </form>
        <button onclick="cacherFormulaireModifier()">Annuler</button>
    </div>
</main>
<%- include('partials/footer') %>
</body>
</html>

<script>
    document.getElementById('search').addEventListener('input', function() {
        filterEquipments();
    });

    document.getElementById('statut-filter').addEventListener('change', function() {
        filterEquipments();
    });

    document.getElementById('sort').addEventListener('change', function() {
        sortEquipments();
    });

    function filterEquipments() {
        const searchValue = document.getElementById('search').value.toLowerCase();
        const statutFilter = document.getElementById('statut-filter').value.toLowerCase();
        const rows = document.querySelectorAll('#equipements-tbody tr');

        rows.forEach(row => {
            const nomValue = row.cells[0].textContent.toLowerCase();
            const marqueValue = row.cells[1].textContent.toLowerCase();
            const statusValue = row.cells[2].textContent.toLowerCase();
            const codeBarreValue = row.cells[3].textContent.toLowerCase();
            const modeleValue = row.cells[4].textContent.toLowerCase();

            if (
                (nomValue.includes(searchValue) ||
                    marqueValue.includes(searchValue) ||
                    statusValue.includes(searchValue) ||
                    codeBarreValue.includes(searchValue) ||
                    modeleValue.includes(searchValue)) &&
                (statutFilter === '' || statusValue === statutFilter)
            ) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function sortEquipments() {
        const sortValue = document.getElementById('sort').value;
        const rows = Array.from(document.querySelectorAll('#equipements-tbody tr'));

        rows.sort((a, b) => {
            const cellA = a.querySelector(`td:nth-child(${sortValue === 'nom' ? 1 : sortValue === 'marque' ? 2 : sortValue === 'modele' ? 3 : 5})`).textContent.toLowerCase();
            const cellB = b.querySelector(`td:nth-child(${sortValue === 'nom' ? 1 : sortValue === 'marque' ? 2 : sortValue === 'modele' ? 3 : 5})`).textContent.toLowerCase();

            if (cellA < cellB) return -1;
            if (cellA > cellB) return 1;
            return 0;
        });

        const tbody = document.getElementById('equipements-tbody');
        tbody.innerHTML = '';
        rows.forEach(row => tbody.appendChild(row));
    }

    function supprimerEquipement(id) {
        if (confirm('Êtes-vous sûr de vouloir supprimer cet équipement ?')) {
            fetch('/equipements/' + id, {
                method: 'DELETE',
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur lors de la suppression de l\'équipement');
                    }
                    return response.json();
                })
                .then(data => {
                    alert('Équipement supprimé avec succès');
                    window.location.reload();
                })
                .catch(error => {
                    alert('Erreur : ' + error.message);
                });
        }
    }

    let modifierVisible = false;

    function afficherFormulaireModifier(id) {
        fetch('/equipements/' + id)
            .then(response => response.json())
            .then(data => {
                console.log("Données reçues pour l'équipement :", data);

                // Remplir les champs du formulaire avec les données de l'équipement
                document.getElementById('nom').value = data.nom;
                document.getElementById('marque').value = data.marque_id;
                document.getElementById('status').value = data.status_id;
                document.getElementById('code_barre').value = data.Code_barre;

                // Définir l'action du formulaire
                document.getElementById('formModifier').action = '/equipements/' + id;

                // Afficher le formulaire de modification en popup
                modifierVisible = true;
                document.getElementById('formModifierEquipement').classList.add('show');

                // Ajouter l'écouteur d'événement pour soumettre le formulaire
                document.getElementById('formModifier').addEventListener('submit', function(event) {
                    event.preventDefault(); // Empêcher l'envoi du formulaire par défaut

                    const nom = document.getElementById('nom').value;
                    const marque_id = document.getElementById('marque').value;
                    const status_id = document.getElementById('status').value;
                    const code_barre = document.getElementById('code_barre').value;

                    // Envoyer les données du formulaire
                    fetch('/equipements/' + id, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ nom, marque_id, status_id, code_barre })
                    })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erreur lors de la modification de l\'équipement');
                            }
                            return response.json();
                        })
                        .then(data => {
                            alert('Équipement modifié avec succès');
                            cacherFormulaireModifier(); // Cacher le formulaire après la modification réussie
                            // Rafraîchir la page ou mettre à jour la liste des équipements
                            window.location.reload();
                        })
                        .catch(error => {
                            alert('Erreur : ' + error.message);
                        });
                }, { once: true }); // Assurer que l'écouteur est ajouté une seule fois
            })
            .catch(error => {
                console.error('Erreur lors de la récupération des détails de l\'équipement :', error);
                alert('Erreur : Impossible de charger les détails de l\'équipement');
            });
    }

    function cacherFormulaireModifier() {
        // Cacher le formulaire de modification en popup
        modifierVisible = false;
        document.getElementById('formModifierEquipement').classList.remove('show');
    }
</script>
